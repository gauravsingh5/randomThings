{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gauravsingh/hello-next/pages/index.tsx\";\nimport { useEffect, useState } from \"react\";\n\nconst axios = require(\"axios\").default;\n\nconst getUsername = user => {\n  const {\n    name: {\n      first,\n      last,\n      title\n    },\n    picture: {\n      thumbnail\n    }\n  } = user;\n  return `${title} ${first} ${last}`;\n};\n\nconst fetchData = () => {\n  return axios.get(\"https://randomuser.me/api\").then(({\n    data\n  }) => {\n    return data;\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nexport default function Home() {\n  const {\n    0: userData,\n    1: setUserData\n  } = useState(\"\");\n  const {\n    0: userInfos,\n    1: setUserInfos\n  } = useState([]);\n  useEffect(() => {\n    fetchData().then(data => {\n      const {\n        name: {\n          first,\n          last,\n          title\n        },\n        picture: {\n          thumbnail\n        }\n      } = data.results[0];\n      setUserInfos(data.results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userInfos.map((user, idx) => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getUsername(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false);\n}","map":{"version":3,"sources":["/home/gauravsingh/hello-next/pages/index.tsx"],"names":["useEffect","useState","axios","require","default","getUsername","user","name","first","last","title","picture","thumbnail","fetchData","get","then","data","catch","err","console","log","Home","userData","setUserData","userInfos","setUserInfos","results","map","idx"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,KADF;AAEJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AAFL,MAGFN,IAHJ;AAIA,SAAQ,GAAEI,KAAM,IAAGF,KAAM,IAAGC,IAAK,EAAjC;AACD,CAND;;AAQA,MAAMI,SAAS,GAAG,MAAM;AACtB,SAAOX,KAAK,CACTY,GADI,CACA,2BADA,EAEJC,IAFI,CAEC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAClB,WAAOA,IAAP;AACD,GAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAPI,CAAP;AAQD,CATD;;AAWA,eAAe,SAASG,IAAT,GAAgB;AAC7B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACuB,SAAD;AAAA,OAAYC;AAAZ,MAA4BxB,QAAQ,CAAM,EAAN,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS,GAAGE,IAAZ,CAAkBC,IAAD,IAAU;AACzB,YAAM;AACJT,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAF;AAASC,UAAAA,IAAT;AAAeC,UAAAA;AAAf,SADF;AAEJC,QAAAA,OAAO,EAAE;AAAEC,UAAAA;AAAF;AAFL,UAGFI,IAAI,CAACU,OAAL,CAAa,CAAb,CAHJ;AAIAD,MAAAA,YAAY,CAACT,IAAI,CAACU,OAAN,CAAZ;AACD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,cACGF,SAAS,CAACG,GAAV,CAAc,CAACrB,IAAD,EAAOsB,GAAP,KAAe;AAC5B;AAAA;AAAA,+BACE;AAAA,oBAAIvB,WAAW,CAACC,IAAD;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,SAAUsB,GAAV;AAAA;AAAA;AAAA;AAAA;AAGD,KAJA;AADH,mBADF;AASD","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst axios = require(\"axios\").default;\n\nconst getUsername = (user) => {\n  const {\n    name: { first, last, title },\n    picture: { thumbnail },\n  } = user;\n  return `${title} ${first} ${last}`;\n};\n\nconst fetchData = () => {\n  return axios\n    .get(\"https://randomuser.me/api\")\n    .then(({ data }) => {\n      return data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport default function Home() {\n  const [userData, setUserData] = useState(\"\");\n  const [userInfos, setUserInfos] = useState<any>([]);\n  useEffect(() => {\n    fetchData().then((data) => {\n      const {\n        name: { first, last, title },\n        picture: { thumbnail },\n      } = data.results[0];\n      setUserInfos(data.results);\n    });\n  }, []);\n\n  return (\n    <>\n      {userInfos.map((user, idx) => {\n        <div key={idx}>\n          <p>{getUsername(user)}</p>\n        </div>;\n      })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}