{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gauravsingh/hello-next/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport default function Home() {\n  _s();\n\n  var _useState = useState(\"\"),\n      num1 = _useState[0],\n      setNum1 = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      num2 = _useState2[0],\n      setNum2 = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      ans = _useState3[0],\n      setAns = _useState3[1];\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      num1: 100,\n      num2: 100\n    })\n  };\n  useEffect(function () {\n    fetch(\"/api/add\", requestOptions).then(function (res) {\n      return res.json();\n    }).then(function (ans) {\n      return setAns(ans);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: function onChange(e) {\n        return setNum1(+e.target.value);\n      },\n      value: num1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: function onChange(e) {\n        return setNum2(+e.target.value);\n      },\n      value: num2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"tVvzo9EP8hHMZM/zClo1Gf8amMI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/gauravsingh/hello-next/pages/index.tsx"],"names":["useEffect","useState","Home","num1","setNum1","num2","setNum2","ans","setAns","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","e","target","value"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACLD,QAAQ,CAAC,EAAD,CADH;AAAA,MACtBE,IADsB;AAAA,MAChBC,OADgB;;AAAA,mBAELH,QAAQ,CAAC,EAAD,CAFH;AAAA,MAEtBI,IAFsB;AAAA,MAEhBC,OAFgB;;AAAA,mBAGPL,QAAQ,CAAC,EAAD,CAHD;AAAA,MAGtBM,GAHsB;AAAA,MAGjBC,MAHiB;;AAI7B,MAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEX,MAAAA,IAAI,EAAE,GAAR;AAAaE,MAAAA,IAAI,EAAE;AAAnB,KAAf;AAHe,GAAvB;AAKAL,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,KAAK,CAAC,UAAD,EAAaN,cAAb,CAAL,CACGO,IADH,CACQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACT,GAAD;AAAA,aAASC,MAAM,CAACD,GAAD,CAAf;AAAA,KAFR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,kBAACY,CAAD;AAAA,eAAOf,OAAO,CAAC,CAACe,CAAC,CAACC,MAAF,CAASC,KAAX,CAAd;AAAA,OAFZ;AAGE,MAAA,KAAK,EAAElB;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,kBAACgB,CAAD;AAAA,eAAOb,OAAO,CAAC,CAACa,CAAC,CAACC,MAAF,CAASC,KAAX,CAAd;AAAA,OAFZ;AAGE,MAAA,KAAK,EAAEhB;AAHT;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAA,gBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD;;GA7BuBL,I;;KAAAA,I","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function Home() {\n  const [num1, setNum1] = useState(\"\");\n  const [num2, setNum2] = useState(\"\");\n  const [ans, setAns] = useState(\"\");\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ num1: 100, num2: 100 }),\n  };\n  useEffect(() => {\n    fetch(\"/api/add\", requestOptions)\n      .then((res) => res.json())\n      .then((ans) => setAns(ans));\n  }, []);\n  return (\n    <>\n      <input\n        type=\"text\"\n        onChange={(e) => setNum1(+e.target.value)}\n        value={num1}\n      />\n      <input\n        type=\"text\"\n        onChange={(e) => setNum2(+e.target.value)}\n        value={num2}\n      />\n      <h1>{ans}</h1>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}