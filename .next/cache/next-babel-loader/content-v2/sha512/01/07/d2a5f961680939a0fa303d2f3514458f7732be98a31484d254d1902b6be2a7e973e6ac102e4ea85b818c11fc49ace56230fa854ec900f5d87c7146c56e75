{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gauravsingh/hello-next/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nvar axios = require(\"axios\")[\"default\"];\n\nvar fetchData = function fetchData() {\n  return axios.get(\"https://randomuser.me/api\").then(function (_ref) {\n    var data = _ref.data;\n    return data;\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\n\nexport default function Home() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  var _useState2 = useState([]),\n      userInfos = _useState2[0],\n      setUserInfos = _useState2[1];\n\n  useEffect(function () {\n    fetchData().then(function (data) {\n      var _data$results$ = data.results[0],\n          _data$results$$name = _data$results$.name,\n          first = _data$results$$name.first,\n          last = _data$results$$name.last,\n          title = _data$results$$name.title,\n          thumbnail = _data$results$.picture.thumbnail;\n      setUserInfos(data.results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userInfos.map(function (user) {\n      var _user$name = user.name,\n          first = _user$name.first,\n          last = _user$name.last,\n          title = _user$name.title,\n          thumbnail = user.picture.thumbnail;\n\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: \"\".concat(title, \" \").concat(first, \" \").concat(last)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n}\n\n_s(Home, \"HZjGNPRmnOuajGVS8qqyJWsU4rU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/gauravsingh/hello-next/pages/index.tsx"],"names":["useEffect","useState","axios","require","fetchData","get","then","data","err","console","log","Home","userData","setUserData","userInfos","setUserInfos","results","name","first","last","title","thumbnail","picture","map","user"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,WAAd;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAOF,KAAK,CACTG,GADI,CACA,2BADA,EAEJC,IAFI,CAEC,gBAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAClB,WAAOA,IAAP;AACD,GAJI,WAKE,UAACC,GAAD,EAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAPI,CAAP;AAQD,CATD;;AAWA,eAAe,SAASG,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBACGV,QAAQ,CAAC,EAAD,CADX;AAAA,MACtBW,QADsB;AAAA,MACZC,WADY;;AAAA,mBAEKZ,QAAQ,CAAM,EAAN,CAFb;AAAA,MAEtBa,SAFsB;AAAA,MAEXC,YAFW;;AAG7Bf,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,SAAS,GAAGE,IAAZ,CAAiB,UAACC,IAAD,EAAU;AAAA,2BAIrBA,IAAI,CAACS,OAAL,CAAa,CAAb,CAJqB;AAAA,+CAEvBC,IAFuB;AAAA,UAEfC,KAFe,uBAEfA,KAFe;AAAA,UAERC,IAFQ,uBAERA,IAFQ;AAAA,UAEFC,KAFE,uBAEFA,KAFE;AAAA,UAGZC,SAHY,kBAGvBC,OAHuB,CAGZD,SAHY;AAKzBN,MAAAA,YAAY,CAACR,IAAI,CAACS,OAAN,CAAZ;AACD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,cACGF,SAAS,CAACS,GAAV,CAAc,UAACC,IAAD,EAAU;AAAA,uBAInBA,IAJmB,CAErBP,IAFqB;AAAA,UAEbC,KAFa,cAEbA,KAFa;AAAA,UAENC,IAFM,cAENA,IAFM;AAAA,UAEAC,KAFA,cAEAA,KAFA;AAAA,UAGVC,SAHU,GAInBG,IAJmB,CAGrBF,OAHqB,CAGVD,SAHU;;AAKvB;AAAA;AAAA,4BAAOD,KAAP,cAAgBF,KAAhB,cAAyBC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KANA;AADH,mBADF;AAWD;;GAxBuBR,I;;KAAAA,I","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst axios = require(\"axios\").default;\n\nconst fetchData = () => {\n  return axios\n    .get(\"https://randomuser.me/api\")\n    .then(({ data }) => {\n      return data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport default function Home() {\n  const [userData, setUserData] = useState(\"\");\n  const [userInfos, setUserInfos] = useState<any>([]);\n  useEffect(() => {\n    fetchData().then((data) => {\n      const {\n        name: { first, last, title },\n        picture: { thumbnail },\n      } = data.results[0];\n      setUserInfos(data.results);\n    });\n  }, []);\n\n  return (\n    <>\n      {userInfos.map((user) => {\n        const {\n          name: { first, last, title },\n          picture: { thumbnail },\n        } = user;\n        <p>{`${title} ${first} ${last}`}</p>;\n      })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}